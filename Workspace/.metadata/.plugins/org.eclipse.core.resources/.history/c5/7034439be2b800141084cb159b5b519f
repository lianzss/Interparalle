package com.interparalle.Util;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.Enumeration;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;
import java.util.zip.ZipInputStream;


public class Zip {
	
	/**   
     * DeCompress the ZIP to the path   
     * @param zipFileString  name of ZIP   
     * @param outPathString   path to be unZIP  
     * @throws Exception   
     */    
    public static void UnZipFolder(String zipFileString, String outPathString) throws Exception {  
    	File desDir = new File(outPathString);
    	if (!desDir.exists()) {
    	// 创建目标目录
    	desDir.mkdirs();
    	}
    	
    	File zipFile = new File(zipFileString);
    	ZipFile zf = new ZipFile(zipFile);
    	for (Enumeration<?> entries = zf.entries(); entries.hasMoreElements();) {
    	ZipEntry entry = ((ZipEntry) entries.nextElement());
    	if (entry.isDirectory()) {
    	String tmpStr = outPathString + File.separator + entry.getName();
    	tmpStr = new String(tmpStr.getBytes("8859_1"), "GB2312");
    	File folder = new File(tmpStr);
    	folder.mkdirs();
    	} else {
    	InputStream is = zf.getInputStream(entry);
    	String str = folderPath + File.separator + entry.getName();
    	// 转换编码，避免中文时乱码
    	str = new String(str.getBytes("8859_1"), "GB2312");
    	File desFile = new File(str);
    	if (!desFile.exists()) {
    	// 创建目标文件
    	desFile.createNewFile();
    	}
    	OutputStream os = new FileOutputStream(desFile);
    	byte[] buffer = new byte[1024];
    	int realLength;
    	while ((realLength = is.read(buffer)) > 0) {
    	os.write(buffer, 0, realLength);
    	os.flush();
    	}
    	is.close();
    	os.close();
    	}


    	}
    	zf.close()
    }

}
