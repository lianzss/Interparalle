package com.interparalle.Util;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Enumeration;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;
import java.util.zip.ZipInputStream;

import com.metaio.sdk.jni.ByteBuffer;

import android.util.Log;


public class Zip {
	
	//final
	final String CLASS_FLAG = "Zip";
	
	public void Unzip(String zipFile, String targetDir) throws Exception{

		ZipInputStream inZip = new ZipInputStream(new FileInputStream(zipFile));  
        ZipEntry zipEntry; 
        String szName = "";
        File fop = new File(zipFile);
        String destDir = fop.getParent().toString()+File.separator+targetDir+zipFile.substring(zipFile.lastIndexOf("/"),zipFile.lastIndexOf(".zip"));
        while ((zipEntry = inZip.getNextEntry()) != null) {
            szName = zipEntry.getName();    
            if (zipEntry.isDirectory()) {    
                // get the folder name of the widget    
                szName = szName.substring(0, szName.length() - 1); 
                File folder = new File(destDir + File.separator +szName);    
                folder.mkdirs();    
            } else {    
            
                File file = new File(destDir + File.separator + szName); 
                Log.d(CLASS_FLAG, file.toString());
                file.createNewFile();    
                // get the output stream of the file    
                FileOutputStream out = new FileOutputStream(file);    
                int len;    
                byte[] buffer = new byte[1024];
                // read (len) bytes into buffer
                while ((len = inZip.read(buffer,0,1024))!= -1) {    
                    // write (len) byte from buffer at the position 0   
                    out.write(buffer, 0, len); 
                    Log.d(CLASS_FLAG, len+"");
                }
                out.flush();
                inZip.closeEntry();
                out.close();    
            }    
        }   
        inZip.close();    
	}
}
